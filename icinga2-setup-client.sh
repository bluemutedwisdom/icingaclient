#!/bin/bash

# nsis is a prerequsite - apt-get install nsis 

# Generate a DOS batch file to allow Icinga's auto certificate signing.
function dosSetup() {
	win_icinga_dir='C:\Program Files\ICINGA2\'  	
	win_pki_dir="${win_icinga_dir}pki"  	

echo " 
mkdir \"${win_pki_dir}\"

cd \"${win_icinga_dir}sbin\"

icinga2 pki new-cert --cn ${client_name} --key \"${win_pki_dir}\\${client_name}.key\" --cert \"${win_pki_dir}\\${client_name}.crt\"
icinga2 pki save-cert --key \"${win_pki_dir}\\${client_name}.key\" --cert \"${win_pki_dir}\\${client_name}.crt\" --trustedcert \"${win_pki_dir}\\trusted-master.crt\" --host $master_name
icinga2 pki request --host $master_name --port $master_port --ticket $ticket --key \"${win_pki_dir}\\${client_name}.key\" --cert \"${win_pki_dir}\\${client_name}.crt\" --trustedcert \"${win_pki_dir}\\trusted-master.crt\" --ca \"${win_pki_dir}\\ca.crt\"
icinga2 node setup --ticket $ticket --endpoint $master_name --zone ${client_name} --master_host $master_name --trustedcert \"${win_pki_dir}\\trusted-master.crt\" --cn ${client_name}
	"
}

function createClientCert() {
	local client="$1"
	local clientkey="${client}.key"
	local clientcsr="${client}.csr"
	local clientcert="${client}.crt"

	# Generate client SSL key and csr
	icinga2 pki new-cert \
        	--cn $client \
        	--key $clientkey \
        	--csr $clientcsr

	# Sign the client cert
	icinga2 pki sign-csr \
		--csr $clientcsr \
        	--cert $clientcert

}

function usage () {
	echo ""
	echo "Error - not enough parameters supplied ($@)"
	echo "  You need to specify a hostname and IP address of the client and parent"
	echo "  eg: ./icinga2-setup-windows-child.sh client1.local 10.2.20.2 parent1.local 10.2.20.1"
	echo "  "
	echo "  OR no paramters at all if you want to use the interative mode."
	echo "  "
	echo "  Hostnames should match the machine's FQDN."
	echo "  The IP should be the primary IP address of the client."
	echo "  "
}

function checkParam() {
	local param="$1"

	if [ -z "$param" ] ; then
		usage
		exit
	fi
}

function setParam() {
	local param="$1"
	local name="$2"

	if [ -z "$param" ] ; then
		read -p "Enter the ${name}:  " param
	fi	

	echo "$param"

}

# Check params
if [ ! -z "$1" ] ; then
	checkParam "$2"
	checkParam "$3"
	checkParam "$4"
	checkParam "$5"
fi

client_name=$(setParam "$1" "fqdn of the client")
client_ip=$(setParam "$2" "client IP")
parent_name=$(setParam "$3" "fqdn of the parent")
parent_ip=$(setParam "$4" "parent IP")
parent_zone=$(setParam "$5" "zone name of the parent")

# For now we assume the parent node name is the same as the master node name.
# The ability to set up a client of a satellite node is coming later.
master_name="${parent_name}"
master_port="5665" 	

server_zones_file="/etc/icinga2/zones.d/${master_name}/${client_name}.conf"
server_hosts_file="${server_zones_file}"


if [ -f "${server_zones_file}" ]; then 
	echo "Client zones file ($server_zones_file) exists. Exiting..."
	exit 1
fi

if icinga2 object list --type Host --name "$client_name" | grep --quiet "$client_name" ; then
	echo "Existing host client name found:"
	icinga2 object list --type Host --name "$client_name"
	exit 1
fi 

WORKING_DIR=`mktemp -d`
CLIENT_OUT_DIR="/etc/icinga2/scripts/clients/"
# Create the exe client output directory if it does not exist already.
if [ ! -d "$CLIENT_OUT_DIR" ]; then 
        mkdir "$CLIENT_OUT_DIR"
fi

# Create the client's own zone file for any client-specific config.
mkdir "/etc/icinga2/zones.d/${client_name}"

# Generate client Icinga node configuration.
echo "
/*
 * Generated by OCS.
 */


object Endpoint \"${client_name}\" {
        host = \"${client_ip}\"
       	port = \"5665\"
}

object Zone \"${client_name}\" {
        endpoints = [ \"${client_name}\" ]
       	parent = \"${parent_name}\"
}

" >> "${server_zones_file}"

echo "
/*
 * Generated by OCS.
 */

object Host \"${client_name}\" {
        import \"generic-host\"
        address = \"${client_ip}\"
        vars.os = \"windows\"
        vars.client_endpoint = name
}
" >> "${server_hosts_file}"


# Now we build the client

# Gather all the templates
chown nagios:nagios ${WORKING_DIR}
chmod 770 ${WORKING_DIR}
cp "/etc/icinga2/pki/ca.crt" "${WORKING_DIR}/"
cp -R /etc/icinga2/scripts/files/* "${WORKING_DIR}/"
cd "${WORKING_DIR}/"

# Replace vars in all client files
sed -e "s/%%CLIENT_NAME%%/${client_name}/g" \
    -e "s/%%CLIENT_IP%%/${client_ip}/g" \
    -e "s/%%PARENT_NAME%%/${parent_name}/g" \
    -e "s/%%PARENT_IP%%/${parent_ip}/g" \
    -e "s/%%PARENT_ZONE%%/${parent_zone}/g" \
    -i *

# Create the DOS file
#dosSetup > ${WORKING_DIR}/${client_name}.bat

# Generate and sign the client certificate.
createClientCert "${client_name}"

# Compile windows client
makensis  -DPARENT_NAME="${parent_name}" \
          -DCLIENT_NAME="${client_name}" \
          "icinga2-setup-windows-child.nsis"

cp "Icinga2_WOCS_${client_name}.exe" $CLIENT_OUT_DIR
	
echo "" 
echo "Clean up $WORKING_DIR"
#rm -rf $WORKING_DIR
echo ""
echo "Client created in $CLIENT_OUT_DIR, restart icinga to load the server configuration changes"
echo "service icinga2 restart"
